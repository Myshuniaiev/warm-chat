{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marina\\\\Desktop\\\\warm-chat\\\\src\\\\components\\\\Friends\\\\Friends.jsx\";\nimport React, { Component } from \"react\";\nimport BG from \"./FriendsBG/FriendsBG\";\nimport css from \"./Friends.module.css\";\nimport userDefault from \"../../img/user-default.png\";\nimport { NavLink } from \"react-router-dom\";\nimport * as axios from \"axios\";\nimport { usersAPI } from \"../../api/api\";\n\nconst Friends = props => {\n  let checkUsers = () => {\n    props.totalUsersCount = 16;\n  };\n\n  let usersPop = () => {\n    props.totalUsersCount;\n  };\n\n  let pagesCount = Math.ceil(props.totalUsersCount > 16 ? checkUsers : usersPop / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.friendsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.listName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Your list of users\")), props.users.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    className: css.form,\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/profile/\" + user.id,\n    className: css.person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.photos.small != null ? user.photos.small : userDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.inData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: css.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, \"Country\", \" - \", \"City\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, user.status))), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, user.followed ? /*#__PURE__*/React.createElement(\"button\", {\n    className: css.followBn,\n    onClick: () => {\n      usersAPI.followUser(user.id).then(data => {\n        if (data.resultCode === 0) {\n          props.unfollow(user.id);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"FOLLOW\")) : /*#__PURE__*/React.createElement(\"button\", {\n    className: css.unfollowBn,\n    onClick: () => {\n      usersAPI.unfollowUser(user.id).then(response => {\n        if (response.data.resultCode === 0) {\n          props.follow(user.id);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"UNFOLLOW\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.numbers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, pages.map(p => {\n    return /*#__PURE__*/React.createElement(\"text\", {\n      className: props.currentPage === p ? `${css.item} ${css.activePage}` : css.item,\n      onClick: e => {\n        props.setPage(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, p);\n  })), /*#__PURE__*/React.createElement(BG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Friends;","map":{"version":3,"sources":["C:/Users/Marina/Desktop/warm-chat/src/components/Friends/Friends.jsx"],"names":["React","Component","BG","css","userDefault","NavLink","axios","usersAPI","Friends","props","checkUsers","totalUsersCount","usersPop","pagesCount","Math","ceil","pageSize","pages","i","push","friendsPage","users","listName","map","user","form","id","content","person","photos","small","data","fullName","name","inData","location","status","button","followed","followBn","followUser","then","resultCode","unfollow","unfollowBn","unfollowUser","response","follow","numbers","p","currentPage","item","activePage","e","setPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport BG from \"./FriendsBG/FriendsBG\";\r\nimport css from \"./Friends.module.css\";\r\nimport userDefault from \"../../img/user-default.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport { usersAPI } from \"../../api/api\";\r\n\r\nconst Friends = (props) => {\r\n  let checkUsers = () => {\r\n    props.totalUsersCount = 16;\r\n  };\r\n  let usersPop = () => {\r\n    props.totalUsersCount;\r\n  };\r\n  let pagesCount = Math.ceil(\r\n    props.totalUsersCount > 16 ? checkUsers : usersPop / props.pageSize\r\n  );\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className={css.friendsPage}>\r\n      <div className={css.users}>\r\n        <div className={css.listName}>\r\n          <h3>Your list of users</h3>\r\n        </div>\r\n        {props.users.map((user) => (\r\n          <div className={css.form} key={user.id}>\r\n            <div className={css.content}>\r\n              <NavLink to={\"/profile/\" + user.id} className={css.person}>\r\n                <img\r\n                  src={\r\n                    user.photos.small != null ? user.photos.small : userDefault\r\n                  }\r\n                />\r\n              </NavLink>\r\n              <div className={css.data}>\r\n                <div className={css.fullName}>{user.name}</div>\r\n                <div className={css.inData}>\r\n                  <div className={css.location}>\r\n                    {\"Country\"} - {\"City\"}\r\n                  </div>\r\n                  <div className={css.status}>{user.status}</div>\r\n                </div>\r\n              </div>\r\n              <div className={css.button}>\r\n                {user.followed ? (\r\n                  <button\r\n                    className={css.followBn}\r\n                    onClick={() => {\r\n                      usersAPI.followUser(user.id).then((data) => {\r\n                        if (data.resultCode === 0) {\r\n                          props.unfollow(user.id);\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    <span>FOLLOW</span>\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className={css.unfollowBn}\r\n                    onClick={() => {\r\n                      usersAPI.unfollowUser(user.id).then((response) => {\r\n                        if (response.data.resultCode === 0) {\r\n                          props.follow(user.id);\r\n                        }\r\n                      });\r\n                    }}\r\n                  >\r\n                    <span>UNFOLLOW</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={css.numbers}>\r\n        {pages.map((p) => {\r\n          return (\r\n            <text\r\n              className={\r\n                props.currentPage === p\r\n                  ? `${css.item} ${css.activePage}`\r\n                  : css.item\r\n              }\r\n              onClick={(e) => {\r\n                props.setPage(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </text>\r\n          );\r\n        })}\r\n      </div>\r\n      <BG />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n"]},"metadata":{},"sourceType":"module"}