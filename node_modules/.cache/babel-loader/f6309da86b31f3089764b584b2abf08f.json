{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marina\\\\Desktop\\\\Alex\\\\warm-chat\\\\src\\\\hoc\\\\withAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nexport const withAuthRedirect = Component => {\n  class RedirectContainer extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/singIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 38\n        }\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }\n\n  let mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n  });\n\n  let Connect;\n  return RedirectContainer;\n};","map":{"version":3,"sources":["C:/Users/Marina/Desktop/Alex/warm-chat/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","withAuthRedirect","Component","RedirectContainer","render","props","isAuth","mapStateToPropsForRedirect","state","auth","Connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC7C,QAAMC,iBAAN,SAAgCJ,KAAK,CAACG,SAAtC,CAAgD;AAC9CE,IAAAA,MAAM,GAAG;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,0BAAO,oBAAC,SAAD,oBAAe,KAAKD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAJ6C;;AAMhD,MAAIE,0BAA0B,GAAIC,KAAD,KAAY;AAC3CF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADwB,GAAZ,CAAjC;;AAGA,MAAII,OAAJ;AACE,SAAOP,iBAAP;AACH,CAZM","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectContainer extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/singIn\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n  });\r\n  let Connect\r\n    return RedirectContainer;\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}