{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../../api/api\"; // TYPE FOR MESSAGES\n\nconst SET_USER_DATA = \"SET-USER-DATA\"; // INITIAL STATE\n\nlet initialState = {\n  // USER ID\n  userId: null,\n  // EMAIL\n  email: null,\n  // LOGIN\n  login: null,\n  // AUTH CHECKOUT\n  isAuth: false\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //   FOLLOW\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // FOLLOW ACTION CREATOR\n\n\nexport const setUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n}); // SET NEW DATA\n\nexport const myDataThunkCreator = () => async dispatch => {\n  let response = await authAPI.authMe();\n\n  if (response.data.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = response.data.data;\n    dispatch(setUserData(id, email, login, true));\n  }\n}; // LOGIN\n\nexport const loginThunkCreator = (email, password, rememberMe) => async (dispatch) => {\n  let response = await authAPI.login(email, password, rememberMe);\n\n  if (response.data.resultCode === 0) {\n    dispatch(myDataThunkCreator());\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n    dispatch(stopSubmit(\"singIn\", {\n      _error: message\n    }));\n  }\n}; // LOGOUT\n\nexport const logoutThunkCreator = () => async dispatch => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Valeriy/Desktop/Warm-chat/src/redux/myReducers/auth-reducer.js"],"names":["stopSubmit","authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setUserData","myDataThunkCreator","dispatch","response","authMe","data","resultCode","id","loginThunkCreator","password","rememberMe","message","messages","length","_error","logoutThunkCreator","logout"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,eAAtB,C,CAEA;;AACA,IAAIC,YAAY,GAAG;AACjB;AACAC,EAAAA,MAAM,EAAE,IAFS;AAGjB;AACAC,EAAAA,KAAK,EAAE,IAJU;AAKjB;AACAC,EAAAA,KAAK,EAAE,IANU;AAOjB;AACAC,EAAAA,MAAM,EAAE;AARS,CAAnB,C,CAWA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKT,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGO,KADE;AAEL,aAAGC,MAAM,CAACE;AAFL,SAAP;AAID;;AACD;AACE,aAAOH,KAAP;AATJ;AAWD,CAZD,C,CAcA;;;AACA,OAAO,MAAMI,WAAW,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AAC5DI,EAAAA,IAAI,EAAET,aADsD;AAE5DU,EAAAA,OAAO,EAAE;AAAER,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB;AAFmD,CAAnC,CAApB,C,CAKP;;AACA,OAAO,MAAMO,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1D,MAAIC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,MAAR,EAArB;;AACA,MAAID,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClC,QAAI;AAAEC,MAAAA,EAAF;AAAMd,MAAAA,KAAN;AAAaD,MAAAA;AAAb,QAAuBW,QAAQ,CAACE,IAAT,CAAcA,IAAzC;AACAH,IAAAA,QAAQ,CAACF,WAAW,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAZ,CAAR;AACD;AACF,CANM,C,CAQP;;AACA,OAAO,MAAMe,iBAAiB,GAAG,CAAChB,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,KAAiC,OAChER,QADgE,KAE7D;AACH,MAAIC,QAAQ,GAAG,MAAMf,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAqBiB,QAArB,EAA+BC,UAA/B,CAArB;;AACA,MAAIP,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCJ,IAAAA,QAAQ,CAACD,kBAAkB,EAAnB,CAAR;AACD,GAFD,MAEO;AACL,QAAIU,OAAO,GACTR,QAAQ,CAACE,IAAT,CAAcO,QAAd,CAAuBC,MAAvB,GAAgC,CAAhC,GACIV,QAAQ,CAACE,IAAT,CAAcO,QAAd,CAAuB,CAAvB,CADJ,GAEI,YAHN;AAIAV,IAAAA,QAAQ,CAACf,UAAU,CAAC,QAAD,EAAW;AAAE2B,MAAAA,MAAM,EAAEH;AAAV,KAAX,CAAX,CAAR;AACD;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMI,kBAAkB,GAAG,MAAM,MAAOb,QAAP,IAAoB;AAC1D,MAAIC,QAAQ,GAAG,MAAMf,OAAO,CAAC4B,MAAR,EAArB;;AACA,MAAIb,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCJ,IAAAA,QAAQ,CAACF,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;AACD;AACF,CALM;AAOP,eAAeL,WAAf","sourcesContent":["import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../../api/api\";\r\n\r\n// TYPE FOR MESSAGES\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  // USER ID\r\n  userId: null,\r\n  // EMAIL\r\n  email: null,\r\n  // LOGIN\r\n  login: null,\r\n  // AUTH CHECKOUT\r\n  isAuth: false,\r\n};\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //   FOLLOW\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// FOLLOW ACTION CREATOR\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\n// SET NEW DATA\r\nexport const myDataThunkCreator = () => async (dispatch) => {\r\n  let response = await authAPI.authMe();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\n// LOGIN\r\nexport const loginThunkCreator = (email, password, rememberMe) => async (\r\n  dispatch\r\n) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(myDataThunkCreator());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some error\";\r\n    dispatch(stopSubmit(\"singIn\", { _error: message }));\r\n  }\r\n};\r\n\r\n// LOGOUT\r\nexport const logoutThunkCreator = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}