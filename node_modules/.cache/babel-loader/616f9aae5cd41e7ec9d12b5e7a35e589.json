{"ast":null,"code":"import { authAPI } from \"../../api/api\"; // TYPE FOR MESSAGES\n\nconst SET_USER_DATA = \"SET-USER-DATA\"; // INITIAL STATE\n\nlet initialState = {\n  // USER IG\n  userId: null,\n  // EMAIL\n  email: null,\n  // LOGIN\n  login: null,\n  // AUTH CHECKOUT\n  isAuth: false\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //   FOLLOW\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.data\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // FOLLOW ACTION CREACTOR\n\n\nexport const setUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const myDataThunkCreator = () => dispatch => {\n  authAPI.authMe().then(response => {\n    if (response.data.resultCode === 0) {\n      let {\n        id,\n        login,\n        email\n      } = response.data.data;\n      dispatch(setUserData(id, email, login, true));\n    }\n  });\n};\nexport const loginThunkCreator = (email, password, rememberMe) => dispatch => {\n  authAPI.login(email, password, rememberMe).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(myDataThunkCreator());\n    }\n  });\n};\nexport const logoutThunkCreator = () => dispatch => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setUserData(null, null, null, false));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Marina/Desktop/warm-chat/src/redux/myRedusers/auth-reduser.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setUserData","myDataThunkCreator","dispatch","authMe","then","response","resultCode","id","loginThunkCreator","password","rememberMe","logoutThunkCreator","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,eAAtB,C,CAEA;;AACA,IAAIC,YAAY,GAAG;AACjB;AACAC,EAAAA,MAAM,EAAE,IAFS;AAGjB;AACAC,EAAAA,KAAK,EAAE,IAJU;AAKjB;AACAC,EAAAA,KAAK,EAAE,IANU;AAOjB;AACAC,EAAAA,MAAM,EAAE;AARS,CAAnB,C,CAWA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKT,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGO,KADE;AAEL,aAAGC,MAAM,CAACE;AAFL,SAAP;AAID;;AACD;AACE,aAAOH,KAAP;AATJ;AAWD,CAZD,C,CAcA;;;AACA,OAAO,MAAMI,WAAW,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AAC5DI,EAAAA,IAAI,EAAET,aADsD;AAE5DU,EAAAA,IAAI,EAAE;AAAER,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB;AAFsD,CAAnC,CAApB;AAKP,OAAO,MAAMO,kBAAkB,GAAG,MAAOC,QAAD,IAAc;AACpDd,EAAAA,OAAO,CAACe,MAAR,GAAiBC,IAAjB,CAAuBC,QAAD,IAAc;AAClC,QAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAClC,UAAI;AAAEC,QAAAA,EAAF;AAAMd,QAAAA,KAAN;AAAaD,QAAAA;AAAb,UAAuBa,QAAQ,CAACN,IAAT,CAAcA,IAAzC;AACAG,MAAAA,QAAQ,CAACF,WAAW,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAZ,CAAR;AACD;AACF,GALD;AAMD,CAPM;AASP,OAAO,MAAMe,iBAAiB,GAAG,CAAChB,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,KAAkCR,QAAD,IAAc;AAC9Ed,EAAAA,OAAO,CAACK,KAAR,CAAcD,KAAd,EAAqBiB,QAArB,EAA+BC,UAA/B,EAA2CN,IAA3C,CAAiDC,QAAD,IAAc;AAC5D,QAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAClCJ,MAAAA,QAAQ,CAACD,kBAAkB,EAAnB,CAAR;AACD;AACF,GAJD;AAKD,CANM;AAQP,OAAO,MAAMU,kBAAkB,GAAG,MAAOT,QAAD,IAAc;AACpDd,EAAAA,OAAO,CAACwB,MAAR,GAAiBR,IAAjB,CAAuBC,QAAD,IAAc;AAClC,QAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAClCJ,MAAAA,QAAQ,CAACF,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;AACD;AACF,GAJD;AAKD,CANM;AAQP,eAAeL,WAAf","sourcesContent":["import { authAPI } from \"../../api/api\";\r\n\r\n// TYPE FOR MESSAGES\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  // USER IG\r\n  userId: null,\r\n  // EMAIL\r\n  email: null,\r\n  // LOGIN\r\n  login: null,\r\n  // AUTH CHECKOUT\r\n  isAuth: false,\r\n};\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //   FOLLOW\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// FOLLOW ACTION CREACTOR\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  data: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const myDataThunkCreator = () => (dispatch) => {\r\n  authAPI.authMe().then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      let { id, login, email } = response.data.data;\r\n      dispatch(setUserData(id, email, login, true));\r\n    }\r\n  });\r\n};\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => (dispatch) => {\r\n  authAPI.login(email, password, rememberMe).then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(myDataThunkCreator());\r\n    }\r\n  });\r\n};\r\n\r\nexport const logoutThunkCreator = () => (dispatch) => {\r\n  authAPI.logout().then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setUserData(null, null, null, false));\r\n    }\r\n  });\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}