{"ast":null,"code":"// TYPE FOR MESSAGES\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE-FOLLOWING-PROGRESS\"; // INITIAL STATE\n\nlet initialState = {\n  // all users\n  users: [],\n  // number of portion of items\n  pageSize: 4,\n  // page size (how many items will be returned in response)\n  totalUsersCount: 0,\n  // current page\n  currentPage: 1,\n  // LOADING\n  followingInProgress: []\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\n\nconst friendsReduser = (state = initialState, action) => {\n  switch (action.type) {\n    //   FOLLOW\n    case FOLLOW:\n      {\n        return { ...state,\n          // users: [...state.users]\n          users: state.users.map(user => {\n            if (user.id === action.userId) {\n              return { ...user,\n                followed: true\n              };\n            }\n\n            return user;\n          })\n        };\n      }\n    // UNFOLLOW\n\n    case UNFOLLOW:\n      {\n        return { ...state,\n          // users: [...state.users]\n          users: state.users.map(user => {\n            if (user.id === action.userId) {\n              return { ...user,\n                followed: false\n              };\n            }\n\n            return user;\n          })\n        };\n      }\n    // SET USERS\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n    // SET CURRENT PAGE\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n    // SET CURRENT PAGE\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n    // GIF\n\n    case TOGGLE_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n    // GIF\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // FOLLOW ACTION CREACTOR\n\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n}); // UNFOLLOW ACTION CREACTOR\n\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n}); // SET CURRENT PAGE ACTION CREACTOR\n\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n}); // SET USERS ACTION CREACTOR\n\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({\n  type: TOGGLE_FOLLOWING_PROGRESS,\n  followingInProgress,\n  userId\n});\nexport const getUsersThunkCreator = userId => {\n  return dispatch => {\n    this.props.toggleIsFetching(true);\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  };\n};\nthis.props.toggleIsFetching(true);\nusersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n  this.props.toggleIsFetching(false);\n  this.props.setUsers(data.items);\n  this.props.setTotalUsersCount(data.totalCount);\n});\nexport default friendsReduser;","map":{"version":3,"sources":["C:/Users/Marina/Desktop/Alex/warm-chat/src/redux/myRedusers/friends-reduser.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","followingInProgress","friendsReduser","state","action","type","map","user","id","userId","followed","isFetching","filter","follow","unfollow","setCurrentPage","setUsers","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","dispatch","props","usersAPI","getUsers","then","data","items","totalCount"],"mappings":"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","sourcesContent":["// TYPE FOR MESSAGES\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE-FOLLOWING-PROGRESS\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  // all users\r\n  users: [],\r\n  // number of portion of items\r\n  pageSize: 4,\r\n  // page size (how many items will be returned in response)\r\n  totalUsersCount: 0,\r\n  // current page\r\n  currentPage: 1,\r\n  // LOADING\r\n  followingInProgress: [],\r\n};\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\r\nconst friendsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //   FOLLOW\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        // users: [...state.users]\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: true };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    }\r\n    // UNFOLLOW\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        // users: [...state.users]\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: false };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    }\r\n    // SET USERS\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users };\r\n    }\r\n    // SET CURRENT PAGE\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    // SET CURRENT PAGE\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    }\r\n    // GIF\r\n    case TOGGLE_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n    }\r\n    // GIF\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// FOLLOW ACTION CREACTOR\r\nexport const follow = (userId) => ({ type: FOLLOW, userId });\r\n// UNFOLLOW ACTION CREACTOR\r\nexport const unfollow = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n// SET CURRENT PAGE ACTION CREACTOR\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n// SET USERS ACTION CREACTOR\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({\r\n  type: TOGGLE_FOLLOWING_PROGRESS,\r\n  followingInProgress,\r\n  userId,\r\n});\r\n\r\nexport const getUsersThunkCreator = (userId) => {\r\n  return (dispatch) => {\r\n    this.props.toggleIsFetching(true);\r\n    usersAPI\r\n      .getUsers(this.props.currentPage, this.props.pageSize)\r\n      .then((data) => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        this.props.setTotalUsersCount(data.totalCount);\r\n      });\r\n  };\r\n};\r\n\r\nthis.props.toggleIsFetching(true);\r\nusersAPI.getUsers(this.props.currentPage, this.props.pageSize).then((data) => {\r\n  this.props.toggleIsFetching(false);\r\n  this.props.setUsers(data.items);\r\n  this.props.setTotalUsersCount(data.totalCount);\r\n});\r\n\r\nexport default friendsReduser;\r\n"]},"metadata":{},"sourceType":"module"}