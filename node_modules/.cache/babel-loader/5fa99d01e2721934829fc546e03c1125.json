{"ast":null,"code":"import { authAPI } from \"../../api/api\"; // TYPE FOR MESSAGES\n\nconst SET_USER_DATA = \"SET-USER-DATA\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"; // INITIAL STATE\n\nlet initialState = {\n  // USER IG\n  userId: null,\n  // EMAIL\n  email: null,\n  // LOGIN\n  login: null,\n  // LOADING\n  isFetching: false,\n  // AUTH CHECKOUT\n  isAuth: false\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //   FOLLOW\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.data\n        };\n      }\n    // GIF\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // FOLLOW ACTION CREACTOR\n\n\nexport const setUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const myDataThunkCreator = () => {\n  return dispatch => {\n    authAPI.authMe().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setUserData(id, email, login, true));\n      }\n    });\n  };\n};\nexport const loginThunkCreator = (email, password, rememberMe) => {\n  return dispatch => {\n    authAPI.login(email, password, rememberMe).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(myDataThunkCreator());\n      }\n    });\n  };\n};\nexport const logoutThunkCreator = () => {\n  return dispatch => {\n    authAPI.logout().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Marina/Desktop/warm-chat/src/redux/myRedusers/auth-reduser.js"],"names":["authAPI","SET_USER_DATA","TOGGLE_IS_FETCHING","initialState","userId","email","login","isFetching","isAuth","authReducer","state","action","type","data","setUserData","toggleIsFetching","myDataThunkCreator","dispatch","authMe","then","resultCode","id","loginThunkCreator","password","rememberMe","logoutThunkCreator","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEA;;AACA,IAAIC,YAAY,GAAG;AACjB;AACAC,EAAAA,MAAM,EAAE,IAFS;AAGjB;AACAC,EAAAA,KAAK,EAAE,IAJU;AAKjB;AACAC,EAAAA,KAAK,EAAE,IANU;AAOjB;AACAC,EAAAA,UAAU,EAAE,KARK;AASjB;AACAC,EAAAA,MAAM,EAAE;AAVS,CAAnB,C,CAaA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKX,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGS,KADE;AAEL,aAAGC,MAAM,CAACE;AAFL,SAAP;AAID;AACD;;AACA,SAAKX,kBAAL;AAAyB;AACvB,eAAO,EAAE,GAAGQ,KAAL;AAAYH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA/B,SAAP;AACD;;AACD;AACE,aAAOG,KAAP;AAbJ;AAeD,CAhBD,C,CAkBA;;;AACA,OAAO,MAAMI,WAAW,GAAG,CAACV,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBE,MAAvB,MAAmC;AAC5DI,EAAAA,IAAI,EAAEX,aADsD;AAE5DY,EAAAA,IAAI,EAAE;AAAET,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,KAAjB;AAAwBE,IAAAA;AAAxB;AAFsD,CAAnC,CAApB,C,CAIP;;AACA,OAAO,MAAMO,gBAAgB,GAAIR,UAAD,KAAiB;AAC/CK,EAAAA,IAAI,EAAEV,kBADyC;AAE/CK,EAAAA;AAF+C,CAAjB,CAAzB;AAKP,OAAO,MAAMS,kBAAkB,GAAG,MAAM;AACtC,SAAQC,QAAD,IAAc;AACnBjB,IAAAA,OAAO,CAACkB,MAAR,GAAiBC,IAAjB,CAAuBN,IAAD,IAAU;AAC9B,UAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACzBH,QAAAA,QAAQ,CAACH,WAAW,CAACO,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAZ,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD,CARM;AAUP,OAAO,MAAMgB,iBAAiB,GAAG,CAACjB,KAAD,EAAQkB,QAAR,EAAkBC,UAAlB,KAAiC;AAChE,SAAQP,QAAD,IAAc;AACnBjB,IAAAA,OAAO,CAACM,KAAR,CAAcD,KAAd,EAAqBkB,QAArB,EAA+BC,UAA/B,EAA2CL,IAA3C,CAAiDN,IAAD,IAAU;AACxD,UAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACzBH,QAAAA,QAAQ,CAACD,kBAAkB,EAAnB,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD,CARM;AAUP,OAAO,MAAMS,kBAAkB,GAAG,MAAM;AACtC,SAAQR,QAAD,IAAc;AACnBjB,IAAAA,OAAO,CAAC0B,MAAR,GAAiBP,IAAjB,CAAuBN,IAAD,IAAU;AAC9B,UAAIA,IAAI,CAACO,UAAL,KAAoB,CAAxB,EAA2B;AACzBH,QAAAA,QAAQ,CAACH,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;AACD;AACF,KAJD;AAKD,GAND;AAOD,CARM;AAUP,eAAeL,WAAf","sourcesContent":["import { authAPI } from \"../../api/api\";\r\n\r\n// TYPE FOR MESSAGES\r\nconst SET_USER_DATA = \"SET-USER-DATA\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  // USER IG\r\n  userId: null,\r\n  // EMAIL\r\n  email: null,\r\n  // LOGIN\r\n  login: null,\r\n  // LOADING\r\n  isFetching: false,\r\n  // AUTH CHECKOUT\r\n  isAuth: false,\r\n};\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //   FOLLOW\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n    }\r\n    // GIF\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// FOLLOW ACTION CREACTOR\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  data: { userId, email, login, isAuth },\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n\r\nexport const myDataThunkCreator = () => {\r\n  return (dispatch) => {\r\n    authAPI.authMe().then((data) => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(setUserData(id, email, login, true));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n  return (dispatch) => {\r\n    authAPI.login(email, password, rememberMe).then((data) => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(myDataThunkCreator());\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const logoutThunkCreator = () => {\r\n  return (dispatch) => {\r\n    authAPI.logout().then((data) => {\r\n      if (data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}