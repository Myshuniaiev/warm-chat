{"ast":null,"code":"// TYPE FOR MESSAGES\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\"; // INITIAL STATE\n\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: \"Adam Kironn\"\n  }, {\n    id: 2,\n    name: \"Mathias Crossley\"\n  }, {\n    id: 3,\n    name: \"Jocelyn Ponce\"\n  }, {\n    id: 4,\n    name: \"Neha Obrien\"\n  }, {\n    id: 5,\n    name: \"Siana Lucero\"\n  }, {\n    id: 6,\n    name: \"Diane Hopper\"\n  }],\n  messages: [{\n    id: 1,\n    message: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\"\n  }, {\n    id: 2,\n    message: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\"\n  }, {\n    id: 3,\n    message: \"The standard chunk of Lorem Ipsum used since the 1500s.\"\n  }]\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        // ADD MESSAGE\n        let newMessage = {\n          id: 5,\n          message: action.newMessageText\n        };\n        return { ...state,\n          messages: [...state.messages, newMessage]\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // REDIRECT \n// ADD MESSAGE ACTION CREACTOR\n\n\nexport const addMessageActionCreator = newMessage => ({\n  type: ADD_MESSAGE,\n  newMessage\n}); // UPDATE NEW MESSAGE TEXT ACTION CREACTOR\n\nexport default messagesReducer;","map":{"version":3,"sources":["C:/Users/Marina/Desktop/warm-chat/src/redux/myRedusers/messages-reduser.js"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","dialogs","id","name","messages","message","messagesReducer","state","action","type","newMessage","newMessageText","addMessageActionCreator"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC,C,CAEA;;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CACP;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADO,EAEP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFO,EAGP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHO,EAIP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJO,EAKP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GALO,EAMP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GANO,CADQ;AASjBC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,OAAO,EACL;AAHJ,GADQ,EAMR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,OAAO,EACL;AAHJ,GANQ,EAWR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEG,IAAAA,OAAO,EAAE;AAFX,GAXQ;AATO,CAAnB,C,CA2BA;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AAAkB;AAChB;AACA,YAAIY,UAAU,GAAG;AACfR,UAAAA,EAAE,EAAE,CADW;AAEfG,UAAAA,OAAO,EAAEG,MAAM,CAACG;AAFD,SAAjB;AAIA,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBM,UAApB;AAFL,SAAP;AAID;;AACD;AACE,aAAOH,KAAP;AAbJ;AAeD,CAhBD,C,CAkBA;AACA;;;AACA,OAAO,MAAMK,uBAAuB,GAAIF,UAAD,KAAiB;AAAED,EAAAA,IAAI,EAAEX,WAAR;AAAqBY,EAAAA;AAArB,CAAjB,CAAhC,C,CACP;;AAEA,eAAeJ,eAAf","sourcesContent":["// TYPE FOR MESSAGES\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Adam Kironn\" },\r\n    { id: 2, name: \"Mathias Crossley\" },\r\n    { id: 3, name: \"Jocelyn Ponce\" },\r\n    { id: 4, name: \"Neha Obrien\" },\r\n    { id: 5, name: \"Siana Lucero\" },\r\n    { id: 6, name: \"Diane Hopper\" },\r\n  ],\r\n  messages: [\r\n    {\r\n      id: 1,\r\n      message:\r\n        \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      message:\r\n        \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      message: \"The standard chunk of Lorem Ipsum used since the 1500s.\",\r\n    },\r\n  ],\r\n};\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\r\nconst messagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      // ADD MESSAGE\r\n      let newMessage = {\r\n        id: 5,\r\n        message: action.newMessageText,\r\n      };\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// REDIRECT \r\n// ADD MESSAGE ACTION CREACTOR\r\nexport const addMessageActionCreator = (newMessage) => ({ type: ADD_MESSAGE, newMessage });\r\n// UPDATE NEW MESSAGE TEXT ACTION CREACTOR\r\n\r\nexport default messagesReducer;\r\n"]},"metadata":{},"sourceType":"module"}