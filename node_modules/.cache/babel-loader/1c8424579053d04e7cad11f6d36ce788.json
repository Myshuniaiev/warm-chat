{"ast":null,"code":"// TYPE FOR MESSAGES\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\"; // INITIAL STATE\n\nlet initialState = {\n  messagesPage: {\n    dialogs: [{\n      id: 1,\n      name: \"Adam Kironn\"\n    }, {\n      id: 2,\n      name: \"Mathias Crossley\"\n    }, {\n      id: 3,\n      name: \"Jocelyn Ponce\"\n    }, {\n      id: 4,\n      name: \"Neha Obrien\"\n    }, {\n      id: 5,\n      name: \"Siana Lucero\"\n    }, {\n      id: 6,\n      name: \"Diane Hopper\"\n    }],\n    messages: [{\n      id: 1,\n      message: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\"\n    }, {\n      id: 2,\n      message: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\"\n    }, {\n      id: 3,\n      message: \"The standard chunk of Lorem Ipsum used since the 1500s.\"\n    }],\n    newMessageText: \"\"\n  }\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED \n\nconst messagesReduser = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      // ADD MESSAGE\n      let newMessage = {\n        id: 5,\n        message: state.newMessageText\n      };\n      state.messages.push(newMessage);\n      state.newMessageText = \"\";\n      return state;\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      // TEXT FROM TEXTAREA (MESSAGES)\n      state.newMessageText = action.newMessageText;\n      return state;\n\n    default:\n      return state;\n  }\n}; // ADD MESSAGE ACTION CREACTOR\n\n\nexport const addMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n}); // UPDATE NEW MESSAGE TEXT ACTION CREACTOR\n\nexport const updateNewMessageTextActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newMessageText: text\n});\nexport default messagesReduser;","map":{"version":3,"sources":["C:/Users/Marina/Desktop/warm-chat/src/redux/myRedusers/messages-reduser.js"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","messagesPage","dialogs","id","name","messages","message","newMessageText","messagesReduser","state","action","type","newMessage","push","addMessageActionCreator","updateNewMessageTextActionCreator","text"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC,C,CAEA;;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KADO,EAEP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAFO,EAGP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAHO,EAIP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAJO,EAKP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KALO,EAMP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KANO,CADG;AASZC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,OAAO,EACL;AAHJ,KADQ,EAMR;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,OAAO,EACL;AAHJ,KANQ,EAWR;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEG,MAAAA,OAAO,EAAE;AAFX,KAXQ,CATE;AAyBZC,IAAAA,cAAc,EAAE;AAzBJ;AADG,CAAnB,C,CA8BA;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,WAAL;AACE;AACA,UAAIc,UAAU,GAAG;AACfT,QAAAA,EAAE,EAAE,CADW;AAEfG,QAAAA,OAAO,EAAEG,KAAK,CAACF;AAFA,OAAjB;AAIAE,MAAAA,KAAK,CAACJ,QAAN,CAAeQ,IAAf,CAAoBD,UAApB;AACAH,MAAAA,KAAK,CAACF,cAAN,GAAuB,EAAvB;AACA,aAAOE,KAAP;;AAEF,SAAKV,uBAAL;AACE;AACAU,MAAAA,KAAK,CAACF,cAAN,GAAuBG,MAAM,CAACH,cAA9B;AACA,aAAOE,KAAP;;AAEF;AACE,aAAOA,KAAP;AAjBJ;AAmBD,CApBD,C,CAsBA;;;AACA,OAAO,MAAMK,uBAAuB,GAAG,OAAO;AAAEH,EAAAA,IAAI,EAAEb;AAAR,CAAP,CAAhC,C,CACP;;AACA,OAAO,MAAMiB,iCAAiC,GAAIC,IAAD,KAAW;AAC1DL,EAAAA,IAAI,EAAEZ,uBADoD;AAE1DQ,EAAAA,cAAc,EAAES;AAF0C,CAAX,CAA1C;AAKP,eAAeR,eAAf","sourcesContent":["// TYPE FOR MESSAGES\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  messagesPage: {\r\n    dialogs: [\r\n      { id: 1, name: \"Adam Kironn\" },\r\n      { id: 2, name: \"Mathias Crossley\" },\r\n      { id: 3, name: \"Jocelyn Ponce\" },\r\n      { id: 4, name: \"Neha Obrien\" },\r\n      { id: 5, name: \"Siana Lucero\" },\r\n      { id: 6, name: \"Diane Hopper\" },\r\n    ],\r\n    messages: [\r\n      {\r\n        id: 1,\r\n        message:\r\n          \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\",\r\n      },\r\n      {\r\n        id: 2,\r\n        message:\r\n          \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some.\",\r\n      },\r\n      {\r\n        id: 3,\r\n        message: \"The standard chunk of Lorem Ipsum used since the 1500s.\",\r\n      },\r\n    ],\r\n    newMessageText: \"\",\r\n  },\r\n}\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED \r\nconst messagesReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      // ADD MESSAGE\r\n      let newMessage = {\r\n        id: 5,\r\n        message: state.newMessageText,\r\n      };\r\n      state.messages.push(newMessage);\r\n      state.newMessageText = \"\";\r\n      return state;\r\n\r\n    case UPDATE_NEW_MESSAGE_TEXT:\r\n      // TEXT FROM TEXTAREA (MESSAGES)\r\n      state.newMessageText = action.newMessageText;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// ADD MESSAGE ACTION CREACTOR\r\nexport const addMessageActionCreator = () => ({ type: ADD_MESSAGE });\r\n// UPDATE NEW MESSAGE TEXT ACTION CREACTOR\r\nexport const updateNewMessageTextActionCreator = (text) => ({\r\n  type: UPDATE_NEW_MESSAGE_TEXT,\r\n  newMessageText: text,\r\n});\r\n\r\nexport default messagesReduser;\r\n"]},"metadata":{},"sourceType":"module"}