{"ast":null,"code":"import { usersAPI } from \"../../api/api\"; // TYPE FOR MESSAGES\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE-FOLLOWING-PROGRESS\"; // INITIAL STATE\n\nlet initialState = {\n  // all users\n  users: [],\n  // number of portion of items\n  pageSize: 4,\n  // page size (how many items will be returned in response)\n  totalUsersCount: 0,\n  // current page\n  currentPage: 1,\n  // LOADING\n  followingInProgress: []\n}; // THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\n\nconst friendsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    //   FOLLOW\n    case FOLLOW:\n      {\n        return { ...state,\n          // users: [...state.users]\n          users: followUnfollowCase(state.users, id)\n        };\n      }\n    // UNFOLLOW\n\n    case UNFOLLOW:\n      {\n        return { ...state,\n          // users: [...state.users]\n          users: state.users.map(user => {\n            if (user.id === action.userId) {\n              return { ...user,\n                followed: false\n              };\n            }\n\n            return user;\n          })\n        };\n      }\n    // SET USERS\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n    // SET CURRENT PAGE\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n    // SET CURRENT PAGE\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n    // GIF\n\n    case TOGGLE_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n    // GIF\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n}; // FOLLOW ACTION CREACTOR\n\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId\n}); // UNFOLLOW ACTION CREACTOR\n\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId\n}); // SET CURRENT PAGE ACTION CREACTOR\n\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n}); // SET USERS ACTION CREACTOR\n\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n}); // SET TOTAL USERS COUNT ACTION CREACTOR\n\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({\n  type: TOGGLE_FOLLOWING_PROGRESS,\n  followingInProgress,\n  userId\n});\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.data.items));\n    dispatch(setTotalUsersCount(data.data.totalCount));\n  };\n};\nexport const setPageThunkCreator = (pageNumber, pageSize) => {\n  return async dispatch => {\n    dispatch(setCurrentPage(pageNumber));\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.data.items));\n  };\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMetchod, action) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let data = await apiMetchod(userId);\n\n  if (data.data.resultCode === 0) {\n    dispatch(action(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false));\n};\n\nexport const unfollowUserThunkCreator = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(userId), unfollow);\n  };\n};\nexport const followUserThunkCreator = userId => {\n  return async dispatch => {\n    followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(userId), follow);\n  };\n};\nexport default friendsReducer;","map":{"version":3,"sources":["C:/Users/Valeriy/Desktop/Warm-chat/src/redux/myReducers/friends-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","followingInProgress","friendsReducer","state","action","type","followUnfollowCase","id","map","user","userId","followed","isFetching","filter","follow","unfollow","setCurrentPage","setUsers","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","dispatch","data","getUsers","items","totalCount","setPageThunkCreator","pageNumber","followUnfollowFlow","apiMetchod","resultCode","unfollowUserThunkCreator","unfollowUser","bind","followUserThunkCreator","followUser"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../../api/api\";\r\n\r\n// TYPE FOR MESSAGES\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE-FOLLOWING-PROGRESS\";\r\n\r\n// INITIAL STATE\r\nlet initialState = {\r\n  // all users\r\n  users: [],\r\n  // number of portion of items\r\n  pageSize: 4,\r\n  // page size (how many items will be returned in response)\r\n  totalUsersCount: 0,\r\n  // current page\r\n  currentPage: 1,\r\n  // LOADING\r\n  followingInProgress: [],\r\n};\r\n\r\n// THIS REDUCER TAKES IN THE STATE AND THE ACTION CALLED\r\nconst friendsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //   FOLLOW\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        // users: [...state.users]\r\n        users: followUnfollowCase(state.users, id)\r\n      };\r\n    }\r\n    // UNFOLLOW\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        // users: [...state.users]\r\n        users: state.users.map((user) => {\r\n          if (user.id === action.userId) {\r\n            return { ...user, followed: false };\r\n          }\r\n          return user;\r\n        }),\r\n      };\r\n    }\r\n    // SET USERS\r\n    case SET_USERS: {\r\n      return { ...state, users: action.users };\r\n    }\r\n    // SET CURRENT PAGE\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    // SET CURRENT PAGE\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    }\r\n    // GIF\r\n    case TOGGLE_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n    }\r\n    // GIF\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// FOLLOW ACTION CREACTOR\r\nexport const follow = (userId) => ({ type: FOLLOW, userId });\r\n// UNFOLLOW ACTION CREACTOR\r\nexport const unfollow = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n// SET CURRENT PAGE ACTION CREACTOR\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n// SET USERS ACTION CREACTOR\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\n// SET TOTAL USERS COUNT ACTION CREACTOR\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({\r\n  type: TOGGLE_FOLLOWING_PROGRESS,\r\n  followingInProgress,\r\n  userId,\r\n});\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.data.items));\r\n    dispatch(setTotalUsersCount(data.data.totalCount));\r\n  };\r\n};\r\n\r\nexport const setPageThunkCreator = (pageNumber, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(setCurrentPage(pageNumber));\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.data.items));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMetchod, action) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let data = await apiMetchod(userId);\r\n  if (data.data.resultCode === 0) {\r\n    dispatch(action(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false));\r\n};\r\n\r\nexport const unfollowUserThunkCreator = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      usersAPI.unfollowUser.bind(userId),\r\n      unfollow\r\n    );\r\n  };\r\n};\r\n\r\nexport const followUserThunkCreator = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      userId,\r\n      usersAPI.followUser.bind(userId),\r\n      follow\r\n    );\r\n  };\r\n};\r\n\r\nexport default friendsReducer;\r\n"]},"metadata":{},"sourceType":"module"}